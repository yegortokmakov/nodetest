name: Cloudfleet CI/CD

# This workflow runs when any of the following occur:
# - A push is made to a branch called `main` or `seed`
# - A tag starting with "v" is created
# - A pull request is created or updated
on:
  push:
    branches:
      - main
      - seed
    tags:
      - v*
  pull_request:

env:
  IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/${{ github.event.repository.name }}
  SKAFFOLD_PROFILE: production

jobs:
  push:
    runs-on: ubuntu-latest

    permissions:
      packages: write
      contents: read

    steps:
      - uses: actions/checkout@v4

      - name: Log in to registry
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.IMAGE_NAME }}
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=ref,event=tag
            type=semver,pattern={{raw}}
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha,prefix=,suffix=,format=long
          flavor: |
            latest=false
            prefix=
            suffix=

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Push image
        uses: docker/build-push-action@v6
        id: push
        with:
          push: true
          context: ./
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: ""
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/arm64,linux/amd64
          file: ./Dockerfile

      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v2

      - name: Install Cloudfleet CLI
        env:
          NONINTERACTIVE: 1
        run: |
          curl -fsSL https://downloads.cloudfleet.ai/apt/pubkey.gpg | tee /usr/share/keyrings/cloudfleet-archive-keyring.gpg >/dev/null
          echo "deb [signed-by=/usr/share/keyrings/cloudfleet-archive-keyring.gpg] https://downloads.cloudfleet.ai/apt stable main" | sudo tee /etc/apt/sources.list.d/cloudfleet.list
          sudo apt update
          sudo apt install cloudfleet

      - name: Configure Cloudfleet CLI
        run: cloudfleet auth add-profile token default ${{ vars.CLOUDFLEET_ORGANIZATION_ID }} ${{ vars.CLOUDFLEET_API_KEY }} ${{ secrets.CLOUDFLEET_API_SECRET }}

      - name: Configure Kubeconfig
        run: cloudfleet clusters kubeconfig ${{ vars.CLOUDFLEET_CLUSTER_ID }}

      - uses: azure/setup-kubectl@v4
        name: Setup kubectl

      - run: kubectl cluster-info

      - name: Set up Kustomize
        uses: imranismail/setup-kustomize@v2

      - uses: engineerd/configurator@v0.0.10
        name: Set up Skaffold
        with:
          name: skaffold
          fromGitHubReleases: true
          repo: GoogleContainerTools/skaffold
          urlTemplate: https://github.com/GoogleContainerTools/skaffold/releases/download/{{version}}/skaffold-linux-amd64
          version: v2.9.0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy the application using Skaffold
        run: skaffold deploy --images=${{ env.IMAGE_NAME }} --tag=${{ github.sha }} -p ${{ env.SKAFFOLD_PROFILE }}
